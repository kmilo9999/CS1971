


Playtesting Requirements
- Element is displayed in viewport: open the application
- Element can be moved around the workspace: move the elements in the viewport
- Element is rendered using a sprite: all the images on the game objects are being draw using the component fxengine.components.SpriteComponent

Primary Engine Requirements:
- Engine supports collisions between points, circles, and AABs: Check the component fxengine.components.CollisionComponent and CollisionShape
- This is done using a collision system and collision behavior:
- Collision checking is done using double dispatch (or with similarly clean implementation): check out classes CircleCollisionShape and AABCollideShape

Primary Game Requirements:
- two base elements in the menu : I have 4
- which can be copied and dragged into the workspace: you can drag elements form the menu to the viewport
- without destroying or moving the original
- which can combine to make a new element : 



Secondary Engine Requirements
- Engine supports a sprite behavior: check fxengine.components.SpriteComponent
- Spritesheets/sprites are only loaded once: check fxengine.manager.ResourceManager. I have a map of resources with the file path, object pair.

Secondary Game Requirements 
- All elements have unique sprites & use sprite behavior
- four base elements: Circle, square, triangle, star
 - three non-base elements: check, diamon, cloud
 - one final element: BDZ image



It took me around 12 hours to get this far  :D. 
