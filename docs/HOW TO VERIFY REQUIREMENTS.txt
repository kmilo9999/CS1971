


Primary Engine Requirements

- Engine supports collisions between points, circles, and AABs: Check the classes in the package fxengine.collision. All the colliding shapes are in that folder
- This is done using a collision system and collision behavior: chekc the classes fxengine.system.CollisionSystem and fxengine.components.CollisionComponent
- Collision checking is done using double dispatch (or with similarly clean implementation):  Check the code in classes fxengine.collision.CircleCollisionShape:collidesAABShape and
  fxengine.collision.AABCollideShape:collidesCircle

Primary Game Requirements:
- You have the TA debugger: I added the folder debugger to the project
- The debugger has been completed to quickly and accurately show collisions between any pair of:	
  - points  : yes
  - circles  :yes 
  - AABs : yes 
  - compound shapes : no
 
- You have:
	
  - two base elements in the menu
 : yes	
  - which can be copied and dragged into the workspace
	: yes
  - without destroying or moving the original, and
	: yes
  - which can combine to make a new element: yes 

Secondary Engine Requirements
=======================================

- Engine supports a sprite behavior: check the class fxengine.component.SpriteComponent
- Spritesheets/sprites are only loaded once: technically, it only loads an image once. However, when anothe game object wants to use the sam spritesheet. It creates it again
- All elements have unique sprites & use sprite behavior: check the classes fxengine.component.SpriteComponent and fxengine.UISystem.UISprite



It took me around 12 hours to get this far  :D. 
