

Primary Engine Requirements

- Your engine must be able to calculate MTVs in addition to normal collision calculations. 
     Check the file fxengine.collision.AABCollideShape methods collisionCircle and collisionAABS
     Check the file fxengine.collision.CircleCollisionShape methods collisionCircle and collisionAABS
     The same logic is in the debugger

Primary Game Requirements

-  The TA debugger should be extended to display the respective MTVs for all collision pairs. TAs should quickly be able to verify that the correct MTV is being calculated.
   Execute the debugger project inside the project workspace
- One of the tile types should be passable.  One should be impassable : in the game there are walls and grass
- The player-controlled unit should not be able to enter the impassable tiles. The unit should: play the game
- Your game never crashes: I havent seen crashing so far

Secondary Engine Requirements

- Your engine must implement a procedural map generation algorithm (space partitioning or
similar complexity) OR support level loading from a text file.: I do load from text file
   Check file fxengine.maploader.GameTileMap
   The game jar can load custom maps. Check the instructions file on how to do it.
- Your engine must correctly suppport an animation behavior: Check the file fxengine.components.AnimationComponent


Secondary Game Requirements

- Your game must use a procedurally generated map OR a map loaded from a level file: 
   Check file fxengine.maploader.GameTileMap
   The game jar can load custom maps. Check the instructions file on how to do it.
- Your game must include a sprite animation.: The main character has animation
- Your game must meet at least two of the extra game requirements: I implemented fog of war and multi level.

It took me a TON of time to get this far  :D. 
