
Primary Engine Requirements

---------------------------------


- Your engine must correctly implement a PhysicsBehavior that holds and updates mass, force, impulse, velocity, and restitution to generate a physically correct response to collisions
    Check class: fxengine.components.PhysicsComponent: It has the physic attributes of gameobjects such as mass, velocit, restitution.
    Check class: fxengine.collision.PhysicsCollision: It resolve the collisions betwwen objects usignt the COR
     

-  Your engine should be able to handle static objects (other PhysicsBehaviors should collide with static objects, but static objects shouldn't accumulate force or impulse)
    Check class: fxengine.system.PhysicsSystem::applyGravity() and fxengine.system.PhysicsSystem::applyImpulse() where I check if the object is static.



Primary Game Requirements

----------------------------------

- The player should have a constant downward acceleration: The player starts in the air and falls due to gravity. If you press the key W it will jump
- The player should be able to jump only when standing on a platform (double-jumping and wall-jumping are allowed): press the key W on a platform. In mid air it wont jump.
- Your game must have three objects with visibly different restitution values that can collide with each other:  There are 3 blocks in scene. A ball with a low restitution, a brick with high restitution, 
  and a spring very low restitution value.
- It must be possible to start a new game without restarting the program: at the top right there is a button that lets you restart the scene

Secondary Engine Requirements
---------------------------------

- Your engine must support collisions and MTVs with convex polygons
  check files: fxengine.collision.PolygonColliderShape


Secondary Game Requirements
------------------------------
- The TA debuger should be extended to show collisions and MTVs with convex polygons
  The debuuger is ready to run week5 tests

- Your game should include a convex polygon:
  There is a triangle in the scece, but the collision mtv are applyed incorrectly. I still dont know why :(

It took me a lot of time getting this far.